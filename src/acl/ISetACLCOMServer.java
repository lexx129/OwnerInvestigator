package acl;

import com4j.*;

/**
 * SetACL COM Interface
 */
@IID("{E1B57CA5-FD7F-4304-BC0A-8BEBDE231D53}")
public interface ISetACLCOMServer extends Com4jObject {
  // Methods:
  /**
   * <p>
   * Add an ACE to a DACL or SACL
   * </p>
   * @param trustee Mandatory java.lang.String parameter.
   * @param permission Mandatory java.lang.String parameter.
   * @param inheritance Mandatory int parameter.
   * @param inheritanceSpecified Mandatory boolean parameter.
   * @param accessMode Mandatory int parameter.
   * @param aclType Mandatory int parameter.
   * @return  Returns a value of type int
   */

  @DISPID(1) //= 0x1. The runtime will prefer the VTID if present
  @VTID(7)
  int addACE(
          String trustee,
          String permission,
          int inheritance,
          boolean inheritanceSpecified,
          int accessMode,
          int aclType);


  /**
   * <p>
   * Remove/replace or copy a trustee
   * </p>
   * @param trustee Mandatory java.lang.String parameter.
   * @param newTrustee Mandatory java.lang.String parameter.
   * @param action Mandatory int parameter.
   * @param trusteeActionAppliesTo Mandatory int parameter.
   * @return  Returns a value of type int
   */

  @DISPID(2) //= 0x2. The runtime will prefer the VTID if present
  @VTID(8)
  int addTrustee(
          String trustee,
          String newTrustee,
          int action,
          int trusteeActionAppliesTo);


  /**
   * <p>
   * Remove/replace or copy accounts from domain 1 with corresponding accounts from domain 2
   * </p>
   * @param domain Mandatory java.lang.String parameter.
   * @param newDomain Mandatory java.lang.String parameter.
   * @param action Mandatory int parameter.
   * @param domainActionAppliesTo Mandatory int parameter.
   * @return  Returns a value of type int
   */

  @DISPID(3) //= 0x3. The runtime will prefer the VTID if present
  @VTID(9)
  int addDomain(
          String domain,
          String newDomain,
          int action,
          int domainActionAppliesTo);


  /**
   * <p>
   * Set the owner
   * </p>
   * @param trustee Mandatory java.lang.String parameter.
   * @return  Returns a value of type int
   */

  @DISPID(4) //= 0x4. The runtime will prefer the VTID if present
  @VTID(10)
  int setOwner(
          String trustee);


  /**
   * <p>
   * Set the primary group
   * </p>
   * @param trustee Mandatory java.lang.String parameter.
   * @return  Returns a value of type int
   */

  @DISPID(5) //= 0x5. The runtime will prefer the VTID if present
  @VTID(11)
  int setPrimaryGroup(
          String trustee);


  /**
   * <p>
   * Set the options for ACL listing
   * </p>
   * @param listFormat Mandatory int parameter.
   * @param listWhat Mandatory int parameter.
   * @param listInherited Mandatory boolean parameter.
   * @param listNameSID Mandatory int parameter.
   * @return  Returns a value of type int
   */

  @DISPID(6) //= 0x6. The runtime will prefer the VTID if present
  @VTID(12)
  int setListOptions(
          int listFormat,
          int listWhat,
          boolean listInherited,
          int listNameSID);


  /**
   * <p>
   * Set the action to be performed
   * </p>
   * @param action Mandatory int parameter.
   * @return  Returns a value of type int
   */

  @DISPID(7) //= 0x7. The runtime will prefer the VTID if present
  @VTID(13)
  int setAction(
          int action);


  /**
   * <p>
   * Specify a (unicode) file to be used for logging
   * </p>
   * @param logFile Mandatory java.lang.String parameter.
   * @return  Returns a value of type int
   */

  @DISPID(8) //= 0x8. The runtime will prefer the VTID if present
  @VTID(14)
  int setLogFile(
          String logFile);


  /**
   * <p>
   * Do it: apply all settings.
   * </p>
   * @return  Returns a value of type int
   */

  @DISPID(9) //= 0x9. The runtime will prefer the VTID if present
  @VTID(15)
  int run();


  /**
   * <p>
   * Retrieve a resource string (used for error messages) identified by ID
   * </p>
   * @param id Mandatory int parameter.
   * @return  Returns a value of type java.lang.String
   */

  @DISPID(10) //= 0xa. The runtime will prefer the VTID if present
  @VTID(16)
  String getResourceString(
          int id);


  /**
   * <p>
   * Retrieve the last API error as a localized string
   * </p>
   * @return  Returns a value of type java.lang.String
   */

  @DISPID(11) //= 0xb. The runtime will prefer the VTID if present
  @VTID(17)
  String getLastAPIErrorMessage();


  /**
   * <p>
   * Retrieve the last API error as an error number
   * </p>
   * @return  Returns a value of type int
   */

  @DISPID(12) //= 0xc. The runtime will prefer the VTID if present
  @VTID(18)
  int getLastAPIError();


  /**
   * <p>
   * Retrieve the last output generated by the list function
   * </p>
   * @return  Returns a value of type java.lang.String
   */

  @DISPID(13) //= 0xd. The runtime will prefer the VTID if present
  @VTID(19)
  String getLastListOutput();


  /**
   * <p>
   * Reset the object to its initial state
   * </p>
   */

  @DISPID(14) //= 0xe. The runtime will prefer the VTID if present
  @VTID(20)
  void reset();


  /**
   * <p>
   * Set the options for ACL listing
   * </p>
   * @param listFormat Mandatory int parameter.
   * @param listWhat Mandatory int parameter.
   * @param listInherited Mandatory boolean parameter.
   * @param listNameSID Mandatory int parameter.
   * @param cleanListOutput Mandatory boolean parameter.
   * @param orphanedOnly Mandatory boolean parameter.
   * @return  Returns a value of type int
   */

  @DISPID(15) //= 0xf. The runtime will prefer the VTID if present
  @VTID(21)
  int setListOptions2(
          int listFormat,
          int listWhat,
          boolean listInherited,
          int listNameSID,
          boolean cleanListOutput,
          boolean orphanedOnly);


  /**
   * <p>
   * Should execution continue if errors occur?
   * </p>
   * @param ignoreErrors Mandatory boolean parameter.
   * @return  Returns a value of type int
   */

  @DISPID(16) //= 0x10. The runtime will prefer the VTID if present
  @VTID(22)
  int setIgnoreErrors(
          boolean ignoreErrors);


  /**
   * <p>
   * Set the object on which all actions are to be performed
   * </p>
   * @param objectPath Mandatory java.lang.String parameter.
   * @param objectType Mandatory int parameter.
   * @return  Returns a value of type int
   */

  @DISPID(17) //= 0x11. The runtime will prefer the VTID if present
  @VTID(23)
  int setObject(
          String objectPath,
          int objectType);


  /**
   * <p>
   * Add an action to be performed
   * </p>
   * @param action Mandatory int parameter.
   * @return  Returns a value of type int
   */

  @DISPID(18) //= 0x12. The runtime will prefer the VTID if present
  @VTID(24)
  int addAction(
          int action);


  /**
   * <p>
   * Should we recurse?
   * </p>
   * @param recursionType Mandatory int parameter.
   * @return  Returns a value of type int
   */

  @DISPID(19) //= 0x13. The runtime will prefer the VTID if present
  @VTID(25)
  int setRecursion(
          int recursionType);


  /**
   * <p>
   * Set flags specific to the object
   * </p>
   * @param daclProtected Mandatory int parameter.
   * @param saclProtected Mandatory int parameter.
   * @param daclResetChildObjects Mandatory boolean parameter.
   * @param saclResetChildObjects Mandatory boolean parameter.
   * @return  Returns a value of type int
   */

  @DISPID(20) //= 0x14. The runtime will prefer the VTID if present
  @VTID(26)
  int setObjectFlags(
          int daclProtected,
          int saclProtected,
          boolean daclResetChildObjects,
          boolean saclResetChildObjects);


  /**
   * <p>
   * Specify a (unicode) file to be used for backup/restore operations
   * </p>
   * @param backupRestoreFile Mandatory java.lang.String parameter.
   * @return  Returns a value of type int
   */

  @DISPID(21) //= 0x15. The runtime will prefer the VTID if present
  @VTID(27)
  int setBackupRestoreFile(
          String backupRestoreFile);


  /**
   * <p>
   * Add a keyword to be filtered out - objects containing this keyword are not processed
   * </p>
   * @param keyword Mandatory java.lang.String parameter.
   */

  @DISPID(22) //= 0x16. The runtime will prefer the VTID if present
  @VTID(28)
  void addObjectFilter(
          String keyword);


  /**
   * <p>
   * Send message events (default: no)?
   * </p>
   * @param sendEvents Mandatory boolean parameter.
   * @return  Returns a value of type int
   */

  @DISPID(23) //= 0x17. The runtime will prefer the VTID if present
  @VTID(29)
  int sendMessageEvents(
          boolean sendEvents);


  /**
   * <p>
   * Remove/replace or copy trustees. Read the input from a CSV file.
   * </p>
   * @param csvFile Mandatory java.lang.String parameter.
   * @param action Mandatory int parameter.
   * @param trusteeActionAppliesTo Mandatory int parameter.
   * @return  Returns a value of type int
   */

  @DISPID(24) //= 0x18. The runtime will prefer the VTID if present
  @VTID(30)
  int addTrusteesFromFile(
          String csvFile,
          int action,
          int trusteeActionAppliesTo);


  /**
   * <p>
   * Options for the action 'Delete orphaned SIDs'
   * </p>
   * @param where Mandatory int parameter.
   * @return  Returns a value of type int
   */

  @DISPID(25) //= 0x19. The runtime will prefer the VTID if present
  @VTID(31)
  int setDelOrphanedSIDOptions(
          int where);


  // Properties:
}
